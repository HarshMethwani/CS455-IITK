name: CI Pipeline

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  push:
    branches:
      - dev

jobs:
  Check-Server-Code:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '17'

      - name: Install server dependencies
        run: cd hangman-server && npm install

      - name: Run ESLint for server
        run: cd hangman-server && npm run lint

      - name: Run server tests with coverage
        run: cd hangman-server && npm run test -- --coverage

      - name: Check server test coverage
        run: |
          cd hangman-server
          COVERAGE_THRESHOLD=75
          COVERAGE=$(npx jest --coverage --coverageReporters=text-summary | grep 'All files' | awk '{print $4}' | sed 's/%//')
          if [ "$COVERAGE" -lt "$COVERAGE_THRESHOLD" ]; then
            echo "Test coverage ($COVERAGE%) is below the threshold ($COVERAGE_THRESHOLD%)"
            exit 1
          fi

      - name: Upload server coverage report
        uses: actions/upload-artifact@v3
        with:
          name: server-coverage-report
          path: hangman-server/coverage

  Check-Client-Code:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js for client
        uses: actions/setup-node@v3
        with:
          node-version: '17'

      - name: Install client dependencies
        run: cd src && npm install

      - name: Run ESLint for client
        run: cd src && npx eslint . --format stylish > code-quality-report-client.txt

      - name: Run client tests
        run: cd src && npm run test -- --coverage

  Deploy-Client:
    runs-on: ubuntu-latest
    needs: Check-Client-Code  # Ensure client code has passed checks
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js for client
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install client dependencies
        run: cd src && npm install

      - name: Build Project Artifacts for Client
        run: |
          cd src
          echo "REACT_APP_BACKEND_URL=${{ secrets.BACKEND_URL }}" >> .env
          npm run build

      - name: Deploy Client to Vercel
        run: cd src && vercel deploy --prod --token=${{ secrets.VERCEL_TOKEN }}
