name: CI Pipeline

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  push:
    branches:
      - dev

jobs:
  Deploy-Client:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '17'  # Use the appropriate version for your client

      - name: Install client dependencies
        run: cd hangman-client && npm install

      - name: Run ESLint for client
        run: cd hangman-client && npm run lint
      - name: Run client tests with coverage
        run: cd hangman-client && npm run test -- --coverage

      - name: Check client test coverage
        run: |
          cd hangman-client
          COVERAGE_THRESHOLD=75
          COVERAGE=$(npx jest --coverage --coverageReporters=text-summary | grep 'All files' | awk '{print $4}' | sed 's/%//')
          if [ "$COVERAGE" -lt "$COVERAGE_THRESHOLD" ]; then
            echo "Test coverage ($COVERAGE%) is below the threshold ($COVERAGE_THRESHOLD%)"
            exit 1
          fi

      - name: Build Project Artifacts for Client
        run: |
          cd hangman-client
          # Replace <BACKEND_URL> with the actual URL of your backend service.
          echo "REACT_APP_BACKEND_URL=${{ secrets.BACKEND_URL }}" >> .env
          npm run build

      - name: Deploy Client to Vercel
        run: cd hangman-client && vercel deploy --prod --token=${{ secrets.VERCEL_TOKEN }}
